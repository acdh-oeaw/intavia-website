---
import { Image } from "astro:assets";

import MainContent from "@/components/main-content.astro";
import PageSection from "@/components/page-section.astro";
import Link from "@/components/link.astro";
import PageTitle from "@/components/page-title.astro";
import { defaultLocale as locale } from "@/config/i18n.config";
import PageLayout from "@/layouts/page-layout.astro";
import { getCollectionName } from "@/lib/content/get-collection-name";
import { processMdx } from "@/lib/content/mdx";
import { reader } from "@/lib/content/reader";
import { getImageImport } from "@/lib/get-image-import";

export async function getStaticPaths() {
	const collection = getCollectionName("collections", locale);
	const pages = await reader().collections[collection].all();

	return pages.map((page) => {
		return { params: { id: page.slug }, props: { page: page.entry } };
	});
}

const { page } = Astro.props;

const documentTitle = page.title;
const { title, image, main } = page;
const { default: Content } = await processMdx(await page.content(), locale);
---

<PageLayout locale={locale} title={documentTitle}>
	<MainContent>
		<PageSection>
			{image && <Image alt="" src={getImageImport(image)} class="h-56 object-cover" />}
			<PageTitle>{title}</PageTitle>
			<div class="prose prose-lg prose-em:italic">
				<Content />
			</div>
			{
				main &&
					main.sections.map((section) => {
						const { title, cards, variant } = section.value;

						const variants = {
							"single-column": "grid-cols-1",
							fluid: "grid-fluid-cols-80",
							"two-columns": "grid-cols-2",
							"three-columns": "grid-cols-3",
							"four-columns": "grid-cols-4",
						};

						return (
							<PageSection>
								<h2>{title}</h2>
								<ul class:list={["grid gap-8", variants[variant]]} role="list">
									{cards.map(async (card) => {
										const id = card.value.reference;
										const collectionName = getCollectionName("pages", locale);
										const page = await reader().collections[collectionName].readOrThrow(id);
										const { image, summary } = page;

										return (
											<li class="overflow-hidden rounded-md border">
												<article>
													{image ? <Image alt="" src={getImageImport(image)} /> : null}
													<p class="p-2">{summary}</p>
													<footer class="flex justify-end">
														<Link href={`/${id}`} class="m-2 rounded-md border p-2">
															{card.value.link.label}
														</Link>
													</footer>
												</article>
											</li>
										);
									})}
								</ul>
							</PageSection>
						);
					})
			}
		</PageSection>
	</MainContent>
</PageLayout>
