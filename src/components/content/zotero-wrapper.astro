---
interface Props {
	user: string;
	userPrivateKey: string;
	collection: string;
}

const { user, collection, userPrivateKey } = Astro.props;

const zotData = await fetch(
	`https://api.zotero.org/groups/${user}/collections/${collection}/items`,
	{
		headers: {
			"Zotero-API-Key": userPrivateKey,
		},
	},
);

const renderedData: Array<{
	key: string;
	version: number;
	library: {
		type: string;
		id: number;
		name: string;
		links: { alternate: { href: string; type: string } };
	};
	links: {
		self: {
			href: string;
			type: string;
		};
		alternate: {
			href: string;
			type: string;
		};
	};
	meta: {
		createdByUser: {
			id: number;
			username: string;
			name: string;
			links: {
				alternate: {
					href: string;
					type: string;
				};
			};
		};
		creatorSummary: string;
		parsedDate: string;
		numChildren: 0;
	};
	data: {
		key: string;
		version: number;
		itemType: string;
		title: string;
		creators?: Array<{
			creatorType: string;
			firstName?: string;
			lastName: string;
		}>;
		abstractNote: string;
		presentationType: string;
		date: string;
		place: string;
		meetingName: string;
		url: string;
		accessDate: string;
		language: string;
		shortTitle: string;
		rights: string;
		extra: string;
		tags: Array<string>;
		collections: Array<string>;
		relations: object;
		dateAdded: string;
		dateModified: string;
	};
}> = await zotData.json();

console.log(renderedData);
---

<div>
	{
		renderedData.map((pub) => {
			return (
				<p>
					{pub.data.creators && pub.data.creators.length !== 0 ? (
						<span>
							{pub.data.creators
								.map((creator) => {
									let ret = creator.lastName;
									if (creator.firstName) ret += `, ${creator.firstName.charAt(0)}.`;
									return ret;
								})
								.join(" & ")}
						</span>
					) : null}
					{pub.meta.parsedDate ? (
						<span>({new Date(pub.meta.parsedDate).toLocaleDateString()}).</span>
					) : null}
					<span>{pub.data.title}.</span>
					{pub.data.meetingName ? <span>{pub.data.meetingName}.</span> : null}
					{pub.data.url ? (
						<a href={pub.data.url} target="_blank">
							{pub.data.url}
						</a>
					) : null}
				</p>
			);
		})
	}
</div>
